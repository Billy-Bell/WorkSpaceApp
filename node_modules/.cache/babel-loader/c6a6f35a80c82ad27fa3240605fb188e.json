{"ast":null,"code":"import _defineProperty from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\WorkSpaceApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\WorkSpaceApp\\\\src\\\\App.tsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport SelectList from './Components/SelectList';\nimport './App.css';\nexport var StateName;\n\n(function (StateName) {\n  StateName[\"SelectFilter\"] = \"SelectFilter\";\n  StateName[\"SelectGroup\"] = \"SelectGroup\";\n  StateName[\"SelectedUnits\"] = \"SelectedUnits\";\n})(StateName || (StateName = {}));\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      SelectFilter: '',\n      SelectGroup: '',\n      SelectedUnits: ''\n    };\n    _this.UpdateState = _this.UpdateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"UpdateState\",\n    value: function UpdateState(stateName, value) {\n      value = value.replace('&amp;', '&');\n\n      while (value.indexOf(' ') > -1) {\n        value = value.replace(' ', '');\n      }\n\n      if (this.state[stateName] === value) {\n        this.setState(_defineProperty({}, stateName, ''));\n\n        if (stateName === 'SelectFilter') {\n          this.setState({\n            SelectGroup: '',\n            SelectedUnits: ''\n          });\n        }\n\n        if (stateName === 'SelectGroup') {\n          this.setState({\n            SelectedUnits: ''\n          });\n        }\n      } else {\n        this.setState(_defineProperty({}, stateName, value));\n      }\n    }\n  }, {\n    key: \"dataCheck\",\n    value: function dataCheck(val, val2) {\n      if (this.state[val2] !== '' //check statevalue is not ''\n      && this.props.data[val].hasOwnProperty(this.state[val2]) //check this.state[val2] is a key in this.data[val]\n      && this.props.data.hasOwnProperty(this.state[val2]) //check val is a key in this.data[val]\n      ) {\n          return this.props.data[val][val2];\n        } else {\n        return [''];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"vh-100 bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"tag-top-navbar\", {\n        name: \"Access\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(SelectList, {\n        UpdateState: this.UpdateState,\n        displayText: true,\n        Title: \"Select Filter\",\n        section: StateName.SelectFilter,\n        Selected: this.state.SelectFilter,\n        Selection: ' ',\n        ItemList: this.props.data.SelectFilter.SelectFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(SelectList, {\n        UpdateState: this.UpdateState,\n        offset: 1,\n        Title: 'Select Group',\n        section: StateName.SelectGroup,\n        Selected: this.state.SelectGroup,\n        Selection: this.state.SelectFilter,\n        ItemList: this.props.data.SelectGroup[this.state.SelectFilter] ? this.props.data.SelectGroup[this.state.SelectFilter] : [''],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(SelectList, {\n        UpdateState: this.UpdateState,\n        offset: 6,\n        Title: \"Selected Units\",\n        section: StateName.SelectedUnits,\n        Selected: this.state.SelectedUnits,\n        Selection: this.state.SelectGroup,\n        ItemList: this.props.data.SelectedUnits[this.state.SelectGroup] ? this.props.data.SelectedUnits[this.state.SelectGroup] : [''],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\WorkSpaceApp\\src\\App.tsx"],"names":["React","SelectList","StateName","App","props","state","SelectFilter","SelectGroup","SelectedUnits","UpdateState","bind","stateName","value","replace","indexOf","setState","val","val2","data","hasOwnProperty","Component"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { Component } from 'react';\r\nimport SelectList from './Components/SelectList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nexport interface Data {\r\n\r\n  readonly SelectFilter: {\r\n    SelectFilter: string[]\r\n    [key: string] : string[];\r\n  }\r\n  readonly SelectGroup: {\r\n    ActiveUnits: string[],\r\n    PrelauchedUnits : string[],\r\n    Leisure: string[],\r\n    ActiveDeactivatedUnitsFYTD :string[] \r\n    [key: string] : string[];\r\n  }\r\n  readonly SelectedUnits: {\r\n    ActiveUnits: string[],\r\n    PrelauchedUnits : string[],\r\n    Leisure: string[],\r\n    ActiveDeactivatedUnitsFYTD :string[]\r\n    [key: string] : string[];\r\n  }\r\n}\r\n\r\nexport interface MyClassProps {\r\n  readonly data: Data;\r\n}\r\n\r\nexport enum StateName {\r\n  SelectFilter = 'SelectFilter',\r\n  SelectGroup = 'SelectGroup',\r\n  SelectedUnits = 'SelectedUnits'\r\n}\r\n\r\nexport interface MyClassState {\r\n SelectFilter : string;\r\n SelectGroup: string;\r\n SelectedUnits: string;\r\n [key : string] : string;\r\n}\r\n\r\nclass App extends React.Component<MyClassProps, MyClassState> {\r\n\r\n  constructor (props: MyClassProps) {\r\n    super(props);\r\n    this.UpdateState = this.UpdateState.bind(this);\r\n  }\r\n\r\n  public state = {\r\n    SelectFilter: '',\r\n    SelectGroup: '',\r\n    SelectedUnits: '',\r\n  }\r\n\r\n  public UpdateState(stateName: StateName, value: string) {\r\n      value = value.replace('&amp;','&')\r\n      while (value.indexOf(' ') > -1) {\r\n        value = value.replace(' ','');\r\n      }\r\n      if (this.state[stateName] === value ){\r\n        this.setState({[stateName]: ''})\r\n        if (stateName === 'SelectFilter') {\r\n          this.setState({SelectGroup: '', SelectedUnits: ''})\r\n        }\r\n        if (stateName === 'SelectGroup') {\r\n          this.setState({SelectedUnits: ''})\r\n        }\r\n      } else {\r\n      this.setState({[stateName]: value})\r\n      }\r\n\r\n      \r\n  }\r\n\r\n  public dataCheck(val:'SelectFilter'|'SelectGroup'|'SelectedUnits',val2:'SelectFilter'|'SelectGroup'|'SelectedUnits') {\r\n    if (this.state[val2] !== '' //check statevalue is not ''\r\n    && (this.props.data[val]).hasOwnProperty(this.state[val2]) //check this.state[val2] is a key in this.data[val]\r\n    && (this.props.data).hasOwnProperty(this.state[val2]) //check val is a key in this.data[val]\r\n    ) {\r\n      return this.props.data[val][val2]\r\n    } else {\r\n      return [''];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='vh-100 bg-light' >\r\n        <tag-top-navbar name=\"Access\" />\r\n        <div className='container ' >\r\n          <div className='row'>\r\n            <SelectList \r\n              UpdateState={this.UpdateState} \r\n              displayText={true} \r\n              Title='Select Filter' \r\n              section={StateName.SelectFilter}\r\n              Selected={this.state.SelectFilter} \r\n              Selection={' '}\r\n              ItemList={this.props.data.SelectFilter.SelectFilter} \r\n            />\r\n            <SelectList \r\n              UpdateState={this.UpdateState} \r\n              offset={1} \r\n              Title={'Select Group'} \r\n              section={StateName.SelectGroup}\r\n              Selected={this.state.SelectGroup} \r\n              Selection={this.state.SelectFilter} \r\n              ItemList={(this.props.data.SelectGroup[this.state.SelectFilter]? this.props.data.SelectGroup[this.state.SelectFilter]: [''])} \r\n            />\r\n            <SelectList \r\n              UpdateState={this.UpdateState} \r\n              offset={6} \r\n              Title='Selected Units' \r\n              section={StateName.SelectedUnits}\r\n              Selected={this.state.SelectedUnits} \r\n              Selection={this.state.SelectGroup} \r\n              ItemList={(this.props.data.SelectedUnits[this.state.SelectGroup]? this.props.data.SelectedUnits[this.state.SelectGroup]: [''])} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}