{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpaceApp\\\\src\\\\Components\\\\SelectList.tsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nvar SelectList = function SelectList(props) {\n  var section = props.section;\n\n  function HandleUpdate(Section, Value) {\n    props.UpdateState(Section, Value);\n  }\n\n  ;\n\n  function SelectedText() {\n    if (props.Title === 'Selected Units' && props.ItemList.length > 1) {\n      return props.Title + ' > ' + props.ItemList.length + ' units';\n    } else {\n      if (props.Selection && props.Selection !== ' ') {\n        return props.Title + ' > ' + props.Selection;\n      } else {\n        return props.Title;\n      }\n    }\n  }\n\n  function selected(item) {\n    while (item.indexOf(' ') > -1) {\n      item = item.replace(' ', '');\n    }\n\n    if (props.Selected === item) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function ShowOption() {\n    if (props.Selection) {\n      if (props.Selection || props.Selection.length > 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function removeSpaces(title) {\n    var className = title;\n\n    while (className.indexOf(' ') > -1) {\n      className.replace(' ', '');\n    }\n\n    return className;\n  }\n\n  return React.createElement(\"div\", {\n    className: 'col-5 pt-5 ' + (props.offset ? 'offset-' + props.offset : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"tag-text\", {\n    type: \"h2\",\n    text: SelectedText(),\n    accent: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: 'SelectBox mt-1 ' + removeSpaces(props.Title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.ItemList.map(function (item, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      id: name,\n      onClick: function onClick(e) {\n        HandleUpdate(section, item);\n      },\n      className: 'align-right SelectItem p-2 ' + (ShowOption() ? ' d-none ' : '') + (selected(item) ? 'SelectedItem' : ''),\n      style: {\n        minHeight: '40px',\n        maxHeight: '50px',\n        padding: '0',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item, React.createElement(\"span\", {\n      className: 'float-right pr-2 ',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCaretRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default SelectList;","map":{"version":3,"sources":["C:\\WorkSpaceApp\\src\\Components\\SelectList.tsx"],"names":["React","FontAwesomeIcon","faCaretRight","SelectList","props","section","HandleUpdate","Section","Value","UpdateState","SelectedText","Title","ItemList","length","Selection","selected","item","indexOf","replace","Selected","ShowOption","removeSpaces","title","className","offset","map","i","name","e","minHeight","maxHeight","padding","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon, Props } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faCaretRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { NONAME } from 'dns';\r\nimport { StateName } from '../App';\r\n\r\nexport interface IProps {\r\n    ItemList: string[];\r\n    Title: string;\r\n    UpdateState: (stateName: StateName, value: string) => void;\r\n    offset?: number;\r\n    Selection?: string | boolean;\r\n    Selected?: string;\r\n    displayText?: boolean;\r\n    section: StateName;\r\n}\r\n\r\nconst SelectList = (props: IProps) => {\r\n\r\n    var section = props.section;\r\n    \r\n    function HandleUpdate(Section: StateName, Value :string ) {\r\n        props.UpdateState(Section, Value )\r\n    };\r\n\r\n    function SelectedText() {\r\n        if (props.Title === 'Selected Units' && props.ItemList.length > 1) {\r\n            return props.Title + ' > ' + props.ItemList.length + ' units';\r\n        } else {\r\n            if (props.Selection && props.Selection !== ' ') { \r\n                return props.Title + ' > ' + props.Selection;\r\n            } else { \r\n                return props.Title ;\r\n            }\r\n        }\r\n    }\r\n  \r\n    function selected(item:string) {\r\n        while (item.indexOf(' ')>-1) {\r\n            item=item.replace(' ','');\r\n        }\r\n        if (props.Selected === item) {\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    function ShowOption() {\r\n\r\n        if (props.Selection) {\r\n            if (props.Selection || props.Selection.length > 0 )  {\r\n                return false; \r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function removeSpaces(title: string) {\r\n        let className = title;\r\n        while(className.indexOf(' ') > -1) {\r\n            className.replace(' ','');\r\n        }\r\n        return className;\r\n    }\r\n\r\n    return (\r\n        <div className={'col-5 pt-5 ' + (props.offset? 'offset-' + props.offset : '' )} >\r\n            <tag-text\r\n            type='h2'\r\n            text={SelectedText()}\r\n            accent='title'>\r\n            </tag-text>\r\n            <div className={'SelectBox mt-1 ' + removeSpaces(props.Title)}>\r\n            {props.ItemList.map(function(item,i) {\r\n               return (\r\n                \r\n                <div key={i} id={name} onClick={(e) => {HandleUpdate(section,item)}} className={'align-right SelectItem p-2 '  + (ShowOption()? ' d-none ' : '') \r\n                + (selected(item) ? 'SelectedItem' : '')} style={{minHeight:'40px', maxHeight:'50px', padding: '0', cursor: 'pointer',  }} >\r\n                    {item}\r\n                    <span className={'float-right pr-2 '} >\r\n                        <FontAwesomeIcon icon={faCaretRight} />\r\n                    </span>\r\n                </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectList;\r\n"]},"metadata":{},"sourceType":"module"}