import * as React from 'react';
import { TagButtonEvents, TagComboBoxEvents, TagConfirmEvents, TagEditFieldEvents, TagFilePickerEvents, TagFormEvents, TagHttpEvents, TagMenuItemEvents, TagMessageEvents, TagModalEvents, TagSearchEvents } from '../events';
interface TagComponentWrapperProps {
    componentDidMountCallback?: (component: any) => void;
    eventListeners?: TagButtonEvents | TagComboBoxEvents | TagConfirmEvents | TagEditFieldEvents | TagFilePickerEvents | TagFormEvents | TagHttpEvents | TagMenuItemEvents | TagMessageEvents | TagModalEvents | TagSearchEvents;
}
export declare class TagComponentWrapper extends React.PureComponent<TagComponentWrapperProps> {
    constructor(props: any);
    private wc;
    private wcReady;
    private wcReadyInterval;
    componentDidMount(): Promise<any>;
    componentWillUnmount(): void;
    render(): React.ReactElement<any>;
    private waitForWebComponent;
    private addEventListeners;
    private removeEventListeners;
}
export {};
