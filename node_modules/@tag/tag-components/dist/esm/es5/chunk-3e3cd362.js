var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { b as valueConvertor } from "./chunk-caf2685f.js";
import { a as httpCall } from "./chunk-8da4d25d.js";
var __awaiter = function (e, a, t, r) { return new (t || (t = Promise))(function (n, s) { function o(e) { try {
    l(r.next(e));
}
catch (e) {
    s(e);
} } function i(e) { try {
    l(r.throw(e));
}
catch (e) {
    s(e);
} } function l(e) { e.done ? n(e.value) : new t(function (a) { a(e.value); }).then(o, i); } l((r = r.apply(e, a || [])).next()); }); };
var convertTagValidationToObject = function (e) { return e && e.length > 0 ? e.map(function (e) { return { args: convertArgs(e.args, e.rule), executeOn: e.executeOn, message: e.message ? e.message : e.textContent.trim(), rule: mapRuleStringToFunction(e.rule) }; }) : []; }, mapRuleStringToFunction = function (e) { switch (e.toLowerCase()) {
    case "required": return required;
    case "email":
    case "isemail": return isEmail;
    case "url":
    case "isurl": return isUrl;
    case "maxlength": return maxLength;
    case "minlength": return minLength;
    case "inarray": return inArray;
    case "notinarray": return notInArray;
    case "matches": return matches;
    case "greaterthan": return greaterThan;
    case "greaterthanorequalto": return greaterThanOrEqualTo;
    case "lessthan": return lessThan;
    case "lessthanorequalto": return lessThanOrEqualTo;
    case "inhttpresponse": return inHttpResponse;
    case "notinhttpresponse": return notInHttpResponse;
    default: return window[e] ? window[e] : void 0;
} }, convertArgs = function (e, a) { if (e && "string" == typeof e) {
    var t = extractDataTypeFromArgs(e);
    return "maxlength" !== a.toLowerCase() && "minlength" !== a.toLowerCase() || (t.dataType = "integer"), "inarray" !== a.toLowerCase() && "notinarray" !== a.toLowerCase() && "inhttpresponse" !== a.toLowerCase() && "notinhttpresponse" !== a.toLowerCase() || (t.value = JSON.parse(e)), valueConvertor(t.value, t.dataType);
} return e; }, extractDataTypeFromArgs = function (e) { var a = { dataType: "string", value: e }; if (e && "string" == typeof e && e.indexOf("|") > 0) {
    var t = e.indexOf("|");
    a.dataType = e.substring(t + 1), a.value = e.substring(0, t);
} return a; }, validateField = function (e, a, t, r) {
    if (r === void 0) { r = "blur"; }
    return __awaiter(void 0, void 0, void 0, function () {
        var n, _a;
        var _this = this;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    n = { valid: !0, errors: [] };
                    _a = a && a.length > 0;
                    if (!_a) return [3 /*break*/, 2];
                    return [4 /*yield*/, Promise.all(a.map(function (a) { return __awaiter(_this, void 0, void 0, function () { var r_1; return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    if (!(a && a.rule && a.executeOn === r)) return [3 /*break*/, 2];
                                    return [4 /*yield*/, a.rule(t, e, a.args)];
                                case 1:
                                    r_1 = _a.sent();
                                    r_1 && (n.valid = !1, n.errors.push(a.message ? a.message : r_1));
                                    _a.label = 2;
                                case 2: return [2 /*return*/];
                            }
                        }); }); }))];
                case 1:
                    _a = (_b.sent());
                    _b.label = 2;
                case 2: return [2 /*return*/, (_a, n)];
            }
        });
    });
}, haveValueChangeValidation = function (e) { var a = !1; return e && e.length > 0 && e.forEach(function (e) { e && e.rule && e.executeOn && "valuechange" === e.executeOn.toLowerCase() && (a = !0); }), a; }, convertToCamelCase = function (e) { var a = e; return a && (a = a.charAt(0).toLowerCase() + a.substring(1)), a; }, convertServerErrorsCamelCase = function (e) { var a = {}; return e && Object.keys(e).forEach(function (t) { var r = convertToCamelCase(t); a[r] = e[t]; }), a; }, mapServerValidation = function (e, a) { var t = e && e.body, r = (convertServerErrorsCamelCase(t)); return a.forEach(function (e) { r[e] || (r[e] = []); }), r; }, isBlank = function (e) { return null == e || "" === e; }, required = function (e, a) { return isBlank(e[a]) ? "This must be populated" : ""; }, isEmail = function (e, a) { return isBlank(e[a]) || -1 !== e[a].search(/^[a-zA-Z0-9.!#$%&â€™*+\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/) ? "" : "This must be in a valid email format"; }, isUrl = function (e, a) { return !isBlank(e[a]) && e[a].search(new RegExp("^(http|https)://", "i")) ? "This must be in a valid URL format" : ""; }, maxLength = function (e, a, t) { return !isBlank(e[a]) && e[a].length > t ? "This can not exceed " + t + " characters" : ""; }, minLength = function (e, a, t) { return e[a].length < t ? "This must be at least " + t + " characters" : ""; }, inArray = function (e, a, t) { return -1 === t.indexOf(e[a]) ? "This is not a valid value" : ""; }, notInArray = function (e, a, t) { return t.indexOf(e[a]) > -1 ? "This is not a valid value" : ""; }, matches = function (e, a, t) { return isBlank(e[a]) || -1 !== e[a].search(t) ? "" : "This is not in the correct format"; }, greaterThan = function (e, a, t) { return e[a] > t ? "" : "This value must be greater than " + t; }, greaterThanOrEqualTo = function (e, a, t) { return e[a] >= t ? "" : "This value must be greater than or equal to " + t; }, lessThan = function (e, a, t) { return e[a] < t ? "" : "This value must be less than " + t; }, lessThanOrEqualTo = function (e, a, t) { return e[a] <= t ? "" : "This value must be less than or equal to " + t; }, inHttpResponse = function (e, a, t) { return __awaiter(void 0, void 0, void 0, function () { var _a; return __generator(this, function (_b) {
    switch (_b.label) {
        case 0:
            _a = -1;
            return [4 /*yield*/, callAPIAndGetBodyArray(t)];
        case 1: return [2 /*return*/, _a === (_b.sent()).indexOf(e[a]) ? "This is not a valid value" : ""];
    }
}); }); }, notInHttpResponse = function (e, a, t) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
    switch (_a.label) {
        case 0: return [4 /*yield*/, callAPIAndGetBodyArray(t)];
        case 1: return [2 /*return*/, (_a.sent()).indexOf(e[a]) > -1 ? "This is not a valid value" : ""];
    }
}); }); }, callAPIAndGetBodyArray = function (e) { return __awaiter(void 0, void 0, void 0, function () { var a, t, r, n, s; return __generator(this, function (_a) {
    switch (_a.label) {
        case 0:
            t = "", r = "";
            "string" == typeof e ? a = e : (a = e.path, t = e.responseBodyArrayProp, r = e.objectProp);
            return [4 /*yield*/, httpCall({ path: a })];
        case 1:
            n = _a.sent();
            return [2 /*return*/, (s = n && n.body ? t && n.body[t] ? n.body[t] : Array.isArray(n.body) ? n.body : [] : []).map(function (e) { return r && e[r] ? e[r] : e; })];
    }
}); }); };
export { convertTagValidationToObject as a, validateField as b, haveValueChangeValidation as c, mapServerValidation as d };
