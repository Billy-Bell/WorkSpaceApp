var findArrayInObject = function (e) { var r = e; return Object.keys(e).forEach(function (t) { Array.isArray(e[t]) && (r = e[t]); }), r; }, copy = function (e) { if (void 0 !== e) {
    var r = Array.isArray(e) ? [] : {};
    for (var t in e)
        if (e.hasOwnProperty(t)) {
            var o = e[t];
            r[t] = "object" == typeof o ? copy(o) : o;
        }
    return r;
} }, getIconForAlertType = function (e) { return "danger" === e.toLowerCase() ? "CircleCross" : "information" === e.toLowerCase() ? "CircleInfo" : "question" === e.toLowerCase() ? "CircleQuestionMark" : "warning" === e.toLowerCase() ? "Warning" : "CircleInfo"; }, getAccentForAlertType = function (e) { return "danger" === e.toLowerCase() ? "danger" : "information" === e.toLowerCase() ? "info" : "question" === e.toLowerCase() ? "info" : "warning" === e.toLowerCase() ? "warning" : "info"; }, nativeShadowDom = function (e) { var r = !1; return "registerElement" in e && "import" in e.createElement("link") && "content" in e.createElement("template") && (r = !0), r; }, guid = function () { function e() { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1); } return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e(); }, createStyleFromJson = function (e) { var r = {}; if (e)
    try {
        r = JSON.parse(e);
    }
    catch (e) { } return r; };
export { createStyleFromJson as a, getIconForAlertType as b, guid as c, nativeShadowDom as d, findArrayInObject as e, getAccentForAlertType as f, copy as g };
