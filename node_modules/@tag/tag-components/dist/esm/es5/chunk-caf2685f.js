var valueConvertor = function (e, r, a) {
    if (a === void 0) { a = "en-GB"; }
    var t;
    if (r && "string" == typeof e)
        switch (r) {
            case "date":
                t = parseDate(e, a);
                break;
            case "datetime":
                t = parseDateTime(e, a);
                break;
            case "integer":
                t = "" === e ? 0 : parseInt(e, 10);
                break;
            case "currency":
            case "decimal":
                t = "" === e ? 0 : parseFloat(e);
                break;
            case "boolean":
                t = "true" === e.toLowerCase();
                break;
            default: t = e;
        }
    else
        t = e;
    return t;
}, currentLocale = navigator.language || "en-GB", getCurrency = function (e) { switch (e.toLowerCase()) {
    case "en-gb": return "GBP";
    case "en-us": return "USD";
    default: return "EUR";
} }, valueFormatter = function (e, r, a, t) { var n = valueConvertor(e, r, t = t || currentLocale); var s = e; if (r && null != e)
    switch (r) {
        case "date":
            s = n.toLocaleDateString(t);
            break;
        case "datetime":
            s = n.toLocaleDateString(t) + " " + n.toLocaleTimeString(t);
            break;
        case "decimal":
            a || (a = { maximumFractionDigits: 10, minimumFractionDigits: 0 }), s = new Intl.NumberFormat(t, a).format(n);
            break;
        case "integer":
            a || (a = { maximumFractionDigits: 0, minimumFractionDigits: 0 }), s = new Intl.NumberFormat(t, a).format(n);
            break;
        case "currency":
            a || (a = { currency: getCurrency(t), minimumFractionDigits: 2, style: "currency" }), s = new Intl.NumberFormat(t, a).format(n);
            break;
        case "boolean":
            s = n.toString();
            break;
        default: s = e;
    } return s; }, parseDate = function (e, r) {
    if (r === void 0) { r = "en-GB"; }
    var a, t = !1;
    if (["/", "\\", "-", "."].forEach(function (r) { e.indexOf(r) > -1 && (t = !0, a = e.split(r)); }), !t || a.length < 3)
        return new Date(e);
    if ("en-gb" === r.toLowerCase()) {
        var e_1 = parseInt(a[0], 10), r_1 = mapMonthNameToNumber(a[1]), t_1 = parseInt(a[2], 10);
        return new Date(t_1, r_1 - 1, e_1);
    }
    if ("en-us" === r.toLowerCase()) {
        var e_2 = parseInt(a[1], 10), r_2 = mapMonthNameToNumber(a[0]), t_2 = parseInt(a[2], 10);
        return new Date(t_2, r_2 - 1, e_2);
    }
    return new Date(e);
}, parseDateTime = function (e, r) {
    if (r === void 0) { r = "en-GB"; }
    var a, t = !1;
    if (["/", "\\", "-", "."].forEach(function (r) { e.indexOf(r) > -1 && (t = !0, a = e.split(r)); }), !t || a.length < 3)
        return new Date(e);
    var n = e.indexOf(" ") > -1 ? e.split(" ")[1] : "", s = n ? n.split(":") : "";
    if ("en-gb" === r.toLowerCase()) {
        var e_3 = parseInt(a[0], 10), r_3 = mapMonthNameToNumber(a[1]), t_3 = parseInt(a[2], 10), n_1 = parseInt(s.length >= 1 ? s[0] : "0", 10), c = parseInt(s.length >= 2 ? s[1] : "0", 10), o = parseInt(s.length >= 3 ? s[2] : "0", 10);
        return new Date(t_3, r_3 - 1, e_3, n_1, c, o);
    }
    if ("en-us" === r.toLowerCase()) {
        var e_4 = parseInt(a[1], 10), r_4 = mapMonthNameToNumber(a[0]), t_4 = parseInt(a[2], 10), n_2 = parseInt(s.length >= 1 ? s[0] : "0", 10), c = parseInt(s.length >= 2 ? s[1] : "0", 10), o = parseInt(s.length >= 3 ? s[2] : "0", 10);
        return new Date(t_4, r_4 - 1, e_4, n_2, c, o);
    }
    return new Date(e);
}, mapMonthNameToNumber = function (e) { if (null == e || "" === e)
    throw new Error("Invalid month name - can't be empty"); switch (e.toLowerCase()) {
    case "jan":
    case "january": return 1;
    case "feb":
    case "february": return 2;
    case "mar":
    case "march": return 3;
    case "apr":
    case "april": return 4;
    case "may": return 5;
    case "jun":
    case "june": return 6;
    case "jul":
    case "july": return 7;
    case "aug":
    case "auguest": return 8;
    case "sep":
    case "sept":
    case "september": return 9;
    case "oct":
    case "october": return 10;
    case "nov":
    case "november": return 11;
    case "dec":
    case "december": return 12;
    default: return parseInt(e, 10);
} };
export { valueFormatter as a, valueConvertor as b };
