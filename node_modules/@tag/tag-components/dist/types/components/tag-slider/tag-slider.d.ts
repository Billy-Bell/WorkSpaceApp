import '../../stencil.core';
import { Accent, DataType } from '../../shared/types';
export declare class TagSlider {
    /** The id of the input */
    id: string;
    /** The name of the input */
    name: string;
    /** The minimum value */
    min: number;
    /** The maximum value */
    max: number;
    /** The increment value when using the keyboard arrow buttons */
    step: number;
    /** The value */
    value: number;
    /** The increment value */
    accent: Accent;
    /** Whether the slider is disabled  */
    disabled: boolean;
    /** The type of the field that is used for value formatting */
    dataType?: DataType;
    /** The formatting options */
    formattingOptions?: string;
    /** Event raised when a the slider value changes */
    private valueChange;
    /** Reference to the DOM element */
    private element;
    /**
     * Sets the focus to the slider
     */
    focusSlider(): void;
    /** Make sure the CSS variables are set (Chrome hack for styling progress track) when the component is first loaded  */
    componentDidLoad(): void;
    /** Make sure the CSS variables are set (Chrome hack for styling progress track) when the props are updated */
    componentDidUpdate(): void;
    render(): JSX.Element;
    /**
     * Handles when the user moves the slider
     * We need to update the CSS --val variable (Chrome hack for styling progress track)
     * Note that this is raised more frequently than the "change" event - hence we do not set the actual component value here
     */
    private handleInput;
    /**
     * Handles when the range input changes value
     * We need to set the value prop and emit the valueChange event
     */
    private handleChange;
    /** Returns a reference to the range input */
    private getRangeInput;
    /**
     * In order to colour the progress track in chrome we set the following CSS variables that are referenced in the css
     * --min - minimum value of the slider
     * --max - minimum value of the slider
     * --val - current value of the slider
     */
    private setCSSVariables;
    /** Sets the value and raises valueChange */
    private setValue;
}
