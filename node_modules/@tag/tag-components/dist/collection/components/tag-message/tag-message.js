import { getAccentForAlertType, getIconForAlertType } from '../../shared/utils';
export class TagMessage {
    constructor() {
        /** The The type of the dialog */
        this.type = 'information';
        /** The width of the dialog */
        this.width = 'medium';
        /* The primary button text **/
        this.primaryButton = 'Confirm';
    }
    /** Shows the dialog */
    show() {
        const modal = this.getModal();
        modal.show();
    }
    /* Hides the dialog **/
    hide() {
        const modal = this.getModal();
        modal.hide();
    }
    render() {
        const { visible, type, heading, text, width, height, primaryButton } = this;
        return (h("tag-modal", { visible: visible, heading: heading, headingType: "span", width: width, height: height, "border-accent": getAccentForAlertType(type), "heading-accent": "title", "heading-icon": getIconForAlertType(type), "heading-icon-accent": getAccentForAlertType(type), "heading-type": "span", "heading-background-accent": "component-background-colour", "heading-class-name": "tag-messsage__heading", "content-class-name": "tag-message__content", "background-accent": "component-background-colour", "primary-button": primaryButton, "primary-button-accent": getAccentForAlertType(type) }, text ? text : h("slot", null)));
    }
    getModal() {
        const modal = this.element.shadowRoot
            ? this.element.shadowRoot.querySelector('tag-modal')
            : this.element.querySelector('tag-modal');
        return modal;
    }
    static get is() { return "tag-message"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "element": {
            "elementRef": true
        },
        "heading": {
            "type": String,
            "attr": "heading"
        },
        "height": {
            "type": String,
            "attr": "height"
        },
        "hide": {
            "method": true
        },
        "primaryButton": {
            "type": String,
            "attr": "primary-button"
        },
        "show": {
            "method": true
        },
        "text": {
            "type": String,
            "attr": "text"
        },
        "type": {
            "type": String,
            "attr": "type"
        },
        "visible": {
            "type": Boolean,
            "attr": "visible",
            "mutable": true
        },
        "width": {
            "type": String,
            "attr": "width"
        }
    }; }
    static get style() { return "/**style-placeholder:tag-message:**/"; }
}
