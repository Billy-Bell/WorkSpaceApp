export class TagCardProfile {
    constructor() {
        /** width of the card */
        this.width = '200px';
        /** The heading type */
        this.headingType = 'h1';
        /** The subtitle1 type */
        this.subTitle1Type = 'h3';
        /** The subtitle2 type */
        this.subTitle2Type = 'h3';
        /** The text1 type */
        this.text1Type = 'p';
        /** The text2 type */
        this.text2Type = 'p';
    }
    render() {
        const { width, image, placeholder, heading, headingType, subTitle1, subTitle1Type, subTitle2, subTitle2Type, text1, text1Type, text2, text2Type, linkText1, linkHref1, linkText2, linkHref2, button1Icon, button2Icon, button3Icon, button4Icon, button5Icon, } = this;
        const placeholderText = image ? '\u00a0' : placeholder;
        return (h("div", { class: "tag-card-profile", style: {
                alignItems: 'center',
                display: 'flex',
                flexDirection: 'column',
                maxWidth: width,
                minWidth: width,
            } },
            h("div", { class: "tag-card-profile__avatar", style: {
                    backgroundImage: image ? `url(${image})` : undefined,
                } },
                h("div", { class: "tag-card-profile__avatar__text" }, placeholderText)),
            h("div", null,
                heading && (h("tag-text", { type: headingType, "class-name": "font-weight-bold text-center mt-2", accent: "title" }, heading)),
                subTitle1 && (h("tag-text", { type: subTitle1Type, "class-name": "text-center font-weight-light mt-0 mb-0", accent: "title" }, subTitle1)),
                subTitle2 && (h("tag-text", { type: subTitle2Type, "class-name": "text-center  mt-0 mb-0", accent: "title" }, subTitle2)),
                h("slot", { name: "header" })),
            (text1 || text2 || linkText1 || linkText2) && (h("div", null,
                h("hr", null),
                linkText1 && (h("tag-link", { href: linkHref1, "class-name": "text-center mt-0 mb-0" }, linkText1)),
                linkText2 && (h("tag-link", { href: linkHref2, "class-name": "text-center mt-0 mb-0" }, linkText2)),
                text1 && (h("tag-text", { type: text1Type, "class-name": "text-center mt-0 mb-0" }, text1)),
                text2 && (h("tag-text", { type: text2Type, "class-name": "text-center mt-0 mb-0" }, text2)))),
            h("slot", { name: "content" }),
            (button1Icon || button2Icon || button3Icon || button4Icon || button5Icon) && (h("div", { class: "tag-card-profile__button" },
                button1Icon && (h("button", { onClick: () => this.handleButtonClick(1) },
                    h("tag-icon", { icon: button1Icon, accent: "title" }))),
                button2Icon && (h("button", { onClick: () => this.handleButtonClick(2) },
                    h("tag-icon", { icon: button2Icon, accent: "title" }))),
                button3Icon && (h("button", { onClick: () => this.handleButtonClick(3) },
                    h("tag-icon", { icon: button3Icon, accent: "title" }))),
                button4Icon && (h("button", { onClick: () => this.handleButtonClick(4) },
                    h("tag-icon", { icon: button4Icon, accent: "title" }))),
                button5Icon && (h("button", { onClick: () => this.handleButtonClick(5) },
                    h("tag-icon", { icon: button5Icon, accent: "title" }))))),
            h("slot", { name: "buttons" })));
    }
    /*
     * Handles the button clicks
     **/
    handleButtonClick(index) {
        this.buttonClick.emit({
            index,
        });
    }
    static get is() { return "tag-card-profile"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "button1Icon": {
            "type": String,
            "attr": "button-1-icon"
        },
        "button2Icon": {
            "type": String,
            "attr": "button-2-icon"
        },
        "button3Icon": {
            "type": String,
            "attr": "button-3-icon"
        },
        "button4Icon": {
            "type": String,
            "attr": "button-4-icon"
        },
        "button5Icon": {
            "type": String,
            "attr": "button-5-icon"
        },
        "heading": {
            "type": String,
            "attr": "heading"
        },
        "headingType": {
            "type": String,
            "attr": "heading-type"
        },
        "image": {
            "type": String,
            "attr": "image"
        },
        "linkHref1": {
            "type": String,
            "attr": "link-href-1"
        },
        "linkHref2": {
            "type": String,
            "attr": "link-href-2"
        },
        "linkText1": {
            "type": String,
            "attr": "link-text-1"
        },
        "linkText2": {
            "type": String,
            "attr": "link-text-2"
        },
        "placeholder": {
            "type": String,
            "attr": "placeholder"
        },
        "subTitle1": {
            "type": String,
            "attr": "sub-title-1"
        },
        "subTitle1Type": {
            "type": String,
            "attr": "sub-title-1-type"
        },
        "subTitle2": {
            "type": String,
            "attr": "sub-title-2"
        },
        "subTitle2Type": {
            "type": String,
            "attr": "sub-title-2-type"
        },
        "text1": {
            "type": String,
            "attr": "text-1"
        },
        "text1Type": {
            "type": String,
            "attr": "text-1-type"
        },
        "text2": {
            "type": String,
            "attr": "text-2"
        },
        "text2Type": {
            "type": String,
            "attr": "text-2-type"
        },
        "width": {
            "type": String,
            "attr": "width"
        }
    }; }
    static get events() { return [{
            "name": "buttonClick",
            "method": "buttonClick",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }]; }
    static get style() { return "/**style-placeholder:tag-card-profile:**/"; }
}
