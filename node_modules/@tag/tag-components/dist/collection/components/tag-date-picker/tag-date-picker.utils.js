import { dateAddDays, getShortDayNameForNumber } from '../../shared/dateUtils';
/**
 * Gets the day state for a given month
 * @param year - The year
 * @param month - The month
 * @param firstDayOfWeek - The first day number of the week
 */
export const getDayRows = (year, month, firstDayOfWeek) => {
    const numberOfDaysInMonth = new Date(year, month + 1, 0).getDate();
    const firstDate = new Date(year, month, 1);
    const firstDateDay = firstDate.getDay();
    const daysToSubstract = firstDateDay < firstDayOfWeek
        ? 7 + firstDateDay - firstDayOfWeek
        : firstDateDay - firstDayOfWeek;
    const firstDayInPicker = dateAddDays(firstDate, daysToSubstract * -1);
    const dayRows = [];
    let days = [];
    let dateCursor = firstDayInPicker;
    while (dateCursor < firstDate) {
        const weekDayNumber = dateCursor.getDay();
        const weekDayName = getShortDayNameForNumber(weekDayNumber);
        const day = {
            weekDayName,
            weekDayNumber,
            date: dateCursor,
            inMonth: false,
            number: dateCursor.getDate(),
        };
        days.push(day);
        dateCursor = dateAddDays(dateCursor, 1);
    }
    for (let i = 1; i <= numberOfDaysInMonth; i++) {
        if (days.length === 7) {
            dayRows.push({ days });
            days = [];
        }
        const date = new Date(year, month, i);
        const weekDayNumber = date.getDay();
        const weekDayName = getShortDayNameForNumber(weekDayNumber);
        const day = {
            date,
            weekDayName,
            weekDayNumber,
            inMonth: true,
            number: i,
        };
        days.push(day);
    }
    while (days.length < 7) {
        const lastDate = days[days.length - 1].date;
        const date = dateAddDays(lastDate, 1);
        const weekDayNumber = date.getDay();
        const weekDayName = getShortDayNameForNumber(weekDayNumber);
        const day = {
            date,
            weekDayName,
            weekDayNumber,
            inMonth: false,
            number: date.getDate(),
        };
        days.push(day);
    }
    if (days.length > 0) {
        dayRows.push({ days });
    }
    return dayRows;
};
