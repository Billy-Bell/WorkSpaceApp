import { createStyleFromJson, getIconForAlertType } from '../../shared/utils';
export class TagAlert {
    constructor() {
        /** The type of the alert */
        this.type = 'information';
        /** Whether the alert is visible */
        this.visible = true;
        /** The width of the alert */
        this.width = '100%';
        /** The alert type to display */
        this.alertType = 'alert';
        /** The timer that is used to close the alert */
        this.showTimer = null;
        /* Handler for the close icon click **/
        this.handleCloseClick = () => {
            console.log('hiding tag-alert');
            this.hide();
        };
    }
    /* Shows the alert**/
    show() {
        this.visible = true;
    }
    /* Hides the alert **/
    hide() {
        this.visible = false;
    }
    render() {
        const { visible, showDuration } = this;
        clearTimeout(this.showTimer);
        if (visible && showDuration) {
            this.showTimer = setTimeout(() => {
                this.hide();
            }, showDuration);
        }
        return (h("div", { role: "alert", class: visible ? 'tag-alert-show' : 'tag-alert-hide' }, this.renderAlert()));
    }
    renderAlert() {
        const { inline, closeable } = this;
        let containerClassName = inline ? `tag-alert tag-alert--inline` : `tag-alert`;
        containerClassName += closeable ? ` tag-alert--closeable` : ``;
        const alertStyle = createStyleFromJson(this.alertStyle);
        alertStyle.width = this.width;
        return (h("div", { class: containerClassName, style: alertStyle },
            this.renderIcon(),
            this.renderContent()));
    }
    renderContent() {
        const contentClassName = this.alertType === 'toast'
            ? `tag-alert__content tag-alert__content--toast tag-alert__content--toast--${this.type}`
            : `tag-alert__content`;
        let title = this.inline
            ? `${this.capitaliseFirstLetter(this.type)} - `
            : `${this.capitaliseFirstLetter(this.type)}`;
        if (this.productTitle) {
            title = this.inline ? `${this.productTitle} - ` : `${this.productTitle}`;
        }
        return (h("div", { class: contentClassName },
            h("span", { class: "tag-alert__text" },
                h("span", { class: "tag-alert__title" }, title),
                this.getText()),
            this.closeable && this.renderCloseButton()));
    }
    renderIcon() {
        const { alertType, iconSrc } = this;
        let wrapperClassName = 'tag-alert__icon-wrapper';
        let icon = null;
        if (alertType === 'product' && iconSrc) {
            const baseStyle = {
                backgroundImage: iconSrc ? `url(${iconSrc})` : undefined,
                height: '34px',
                width: '34px',
            };
            icon = h("div", { style: Object.assign({}, baseStyle) });
        }
        else {
            icon = h("tag-icon", { icon: getIconForAlertType(this.type), accent: "white", size: 30 });
        }
        if (alertType === 'product') {
            wrapperClassName += ` tag-alert--product`;
        }
        else {
            wrapperClassName += ` tag-alert--${this.type.toLowerCase()}`;
        }
        return h("div", { class: wrapperClassName }, icon && icon);
    }
    renderCloseButton() {
        const closeClassName = this.alertType === 'toast' ? `tag-alert__close tag-alert__close--toast` : `tag-alert__close`;
        const accent = this.alertType === 'toast' ? 'white' : 'title';
        return (h("div", { class: closeClassName },
            h("tag-icon", { icon: "CrossThin", class: "close", accent: accent, onClick: this.handleCloseClick })));
    }
    getText() {
        if (this.text) {
            return this.text;
        }
        else {
            return h("slot", null);
        }
    }
    capitaliseFirstLetter(text) {
        return text.charAt(0).toUpperCase() + text.slice(1);
    }
    static get is() { return "tag-alert"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "alertStyle": {
            "type": String,
            "attr": "alert-style"
        },
        "alertType": {
            "type": String,
            "attr": "alert-type"
        },
        "closeable": {
            "type": Boolean,
            "attr": "closeable"
        },
        "hide": {
            "method": true
        },
        "iconSrc": {
            "type": String,
            "attr": "icon-src"
        },
        "inline": {
            "type": Boolean,
            "attr": "inline"
        },
        "productTitle": {
            "type": String,
            "attr": "product-title"
        },
        "show": {
            "method": true
        },
        "showDuration": {
            "type": Number,
            "attr": "show-duration"
        },
        "text": {
            "type": String,
            "attr": "text"
        },
        "type": {
            "type": String,
            "attr": "type"
        },
        "visible": {
            "type": Boolean,
            "attr": "visible",
            "mutable": true
        },
        "width": {
            "type": String,
            "attr": "width"
        }
    }; }
    static get style() { return "/**style-placeholder:tag-alert:**/"; }
}
