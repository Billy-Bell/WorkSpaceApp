export class TagRecordNav {
    constructor() {
        /** The current record number  */
        this.record = 1;
        /** Gets the array of record numbers */
        this.getRecordArray = () => {
            const records = [];
            for (let i = 1; i <= this.recordCount; i++) {
                const recordInfo = {
                    recordNumber: i,
                };
                records.push(recordInfo);
            }
            return records;
        };
    }
    render() {
        const records = this.getRecordArray();
        return (h("ul", { class: "tag-record-nav" }, records &&
            records.length > 0 &&
            records.map(record => (h("li", null,
                h("div", { class: record.recordNumber === this.record ? 'record active' : 'record', onClick: () => this.handleClick(record.recordNumber), tabindex: 0 }, record.recordNumber === this.record && h("div", { class: "record-active-inner" })))))));
    }
    handleClick(goToRecord) {
        this.recordRequest.emit({
            recordNumber: goToRecord,
        });
    }
    static get is() { return "tag-record-nav"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "record": {
            "type": Number,
            "attr": "record"
        },
        "recordCount": {
            "type": Number,
            "attr": "record-count"
        }
    }; }
    static get events() { return [{
            "name": "recordRequest",
            "method": "recordRequest",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }]; }
    static get style() { return "/**style-placeholder:tag-record-nav:**/"; }
}
