import { createStyleFromJson } from '../../shared/utils';
export class TagAvatar {
    constructor() {
        /** size of the avatar */
        this.size = '40px';
        /** The text to display in the button badge */
        this.badgeAccent = 'primary';
    }
    render() {
        const { avatarStyle, src, placeholder, size } = this;
        const placeholderText = src ? '\u00a0' : placeholder;
        const baseStyle = {
            backgroundImage: src ? `url(${src})` : undefined,
            height: size,
            width: size,
        };
        return (h("div", { class: "tag-avatar__avatar", style: Object.assign({}, baseStyle, createStyleFromJson(avatarStyle)) },
            placeholderText,
            this.renderBadge()));
    }
    renderBadge() {
        const badgeClass = 'tag-avatar__avatar__badge';
        if (this.badge) {
            return h("tag-badge", { class: badgeClass, value: this.badge, accent: this.badgeAccent });
        }
        else {
            return null;
        }
    }
    static get is() { return "tag-avatar"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "avatarStyle": {
            "type": String,
            "attr": "avatar-style"
        },
        "badge": {
            "type": String,
            "attr": "badge"
        },
        "badgeAccent": {
            "type": String,
            "attr": "badge-accent"
        },
        "placeholder": {
            "type": String,
            "attr": "placeholder"
        },
        "size": {
            "type": String,
            "attr": "size"
        },
        "src": {
            "type": String,
            "attr": "src"
        }
    }; }
    static get style() { return "/**style-placeholder:tag-avatar:**/"; }
}
