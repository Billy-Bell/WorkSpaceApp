export class TagMenuItem {
    render() {
        const { name, icon, text } = this;
        return (h("div", { role: "menuitem", class: "tag-menu-item", onClick: () => this.handleClick(name, text), tabindex: 0 },
            icon && h("tag-icon", { icon: icon, class: "tag-menu-item__icon" }),
            h("span", null, text),
            h("slot", null)));
    }
    handleKeyDown(e) {
        const { name, text } = this;
        if (e.key === 'Enter') {
            e.cancelBubble = true;
            this.handleClick(name, text);
        }
    }
    /** Handles the menu item click */
    handleClick(name, text) {
        // raise the menuItemClick event
        const args = this.getDataAttributes();
        args.name = name;
        args.text = text;
        this.menuItemClick.emit(args);
    }
    /**
     * Gets the data attributes with the elements
     * These are included in the MenuItemClick arguments
     * This is useful when the menu is in a list for information about the list item
     */
    getDataAttributes() {
        const attributes = [].slice.call(this.element.attributes);
        const data = {};
        attributes.forEach(attribute => {
            if (attribute.name.indexOf('data-') === 0) {
                const propName = attribute.name.substr(5);
                data[propName] = attribute.value;
            }
        });
        return data;
    }
    static get is() { return "tag-menu-item"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "element": {
            "elementRef": true
        },
        "icon": {
            "type": String,
            "attr": "icon"
        },
        "name": {
            "type": String,
            "attr": "name"
        },
        "text": {
            "type": String,
            "attr": "text"
        }
    }; }
    static get events() { return [{
            "name": "menuItemClick",
            "method": "menuItemClick",
            "bubbles": true,
            "cancelable": true,
            "composed": true
        }]; }
    static get listeners() { return [{
            "name": "keydown",
            "method": "handleKeyDown"
        }]; }
    static get style() { return "/**style-placeholder:tag-menu-item:**/"; }
}
