export class TagStat {
    constructor() {
        /** The background colour for the KPI */
        this.accent = 'dolphinblue';
        /** Whether the value is under the label (vertical) or at the side (horizontal) */
        this.orientation = 'vertical';
    }
    render() {
        const { label, value } = this;
        const orientation = this.orientation ? this.orientation : 'vertical';
        const labelOrientationClass = `tag-stat__label-${orientation.toLowerCase()}`;
        const valueOrientationClass = `tag-stat__value-${orientation.toLowerCase()}`;
        return (h("div", { class: this.getContainerClasses() },
            h("div", { class: `tag-stat__label ${labelOrientationClass}` },
                h("tag-text", { type: "span", text: label, accent: "white", textStyle: "{\"font-family\": \"Lato\", \"font-size\": \"16px\"}" })),
            h("div", { class: `tag-stat__value ${valueOrientationClass} tag-stat__value-accent-${this.accent.toLowerCase()}` },
                h("tag-text", { type: "span", text: value, accent: "white", textStyle: "{\"font-family\": \"Lato\", \"font-size\": \"40px\", \"font-weight\": \"700\"}" }))));
    }
    getContainerClasses() {
        const orientation = this.orientation ? this.orientation : 'vertical';
        let cls = `tag-stat tag-stat-${orientation}`;
        if (this.accent) {
            cls = cls + ` tag-stat-accent-${this.accent.toLowerCase()}`;
        }
        return cls;
    }
    static get is() { return "tag-stat"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "accent": {
            "type": String,
            "attr": "accent"
        },
        "label": {
            "type": String,
            "attr": "label"
        },
        "orientation": {
            "type": String,
            "attr": "orientation"
        },
        "value": {
            "type": String,
            "attr": "value"
        }
    }; }
    static get style() { return "/**style-placeholder:tag-stat:**/"; }
}
