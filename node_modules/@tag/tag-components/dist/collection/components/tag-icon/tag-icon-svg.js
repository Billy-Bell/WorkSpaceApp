// import './classlist-polyfill.js';
import icons from './tag-icons';
export class TagIconSvg {
    constructor() {
        /** The size of the icon */
        this.size = 24;
    }
    render() {
        const { accent } = this;
        const cls = accent ? `tag-icon--${accent.toLowerCase()}` : `tag-icon--default`;
        return (h("div", { "data-icon": this.icon ? this.icon : 'blank', class: cls }, this.getSVG()));
    }
    getSVG() {
        if (this.icon === null || this.icon.toString() === '') {
            return h("span", { class: "tag-icon--blank" });
        }
        else {
            const svg = icons[this.icon];
            const sizeString = `${this.size}px`;
            const svgProps = {
                style: {
                    height: sizeString,
                    width: sizeString,
                },
            };
            return svg(svgProps);
        }
    }
    static get is() { return "tag-icon-svg"; }
    static get properties() { return {
        "accent": {
            "type": String,
            "attr": "accent"
        },
        "icon": {
            "type": String,
            "attr": "icon"
        },
        "size": {
            "type": Number,
            "attr": "size"
        }
    }; }
    static get style() { return "/**style-placeholder:tag-icon-svg:**/"; }
}
