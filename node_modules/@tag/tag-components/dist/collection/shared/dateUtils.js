/**
 * Checks whether 2 dates are equal
 * @param date1 - The first date
 * @param date2 - The second date
 */
export const areDatesEqual = (date1, date2) => {
    if (date1 === undefined || date2 === undefined) {
        return false;
    }
    if (date1 === null || date2 === null) {
        return false;
    }
    if (!date1.getTime || !date2.getTime) {
        return false;
    }
    return date1.getTime() === date2.getTime();
};
/**
 * Adds days to a date
 * @param date - The starting date
 * @param days - The number of days to add
 */
export const dateAddDays = (date, days) => {
    const dateCopy = new Date(date.getTime());
    dateCopy.setDate(dateCopy.getDate() + days);
    return dateCopy;
};
/**
 * Gets the day number for a given day name
 * @param dayName - The day name
 */
export const getDayNumberForName = (dayName) => {
    switch (dayName.toLowerCase()) {
        case 'sun':
        case 'sunday':
            return 0;
        case 'mon':
        case 'monday':
            return 1;
        case 'tue':
        case 'tuesday':
            return 2;
        case 'wed':
        case 'wednesday':
            return 3;
        case 'thu':
        case 'thursday':
            return 4;
        case 'fri':
        case 'friday':
            return 5;
        case 'sat':
        case 'saturday':
            return 6;
        default:
            throw new Error(`Invalid day name ${dayName}`);
    }
};
/**
 * Gets the short day name for a given day number
 * @param dayNumber - The day number
 */
export const getShortDayNameForNumber = (dayNumber) => {
    switch (dayNumber) {
        case 0:
            return 'Sun';
        case 1:
            return 'Mon';
        case 2:
            return 'Tue';
        case 3:
            return 'Wed';
        case 4:
            return 'Thu';
        case 5:
            return 'Fri';
        case 6:
            return 'Sat';
        default:
            throw new Error('Invalid day number');
    }
};
/**
 * Gets the ordered short day names for the week
 * @param firstDayOfWeek - The day number for the first day of the week
 */
export const getShortDayNames = (firstDayOfWeek) => {
    switch (firstDayOfWeek) {
        case 0:
            return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        case 1:
            return ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
        case 2:
            return ['Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon'];
        case 3:
            return ['Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue'];
        case 4:
            return ['Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed'];
        case 5:
            return ['Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thur'];
        case 6:
            return ['Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'];
        default:
            return ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'];
    }
};
/**
 * Gets the long month name for a given month number
 * @param monthNumber - The month number
 */
export const getLongMonthName = (monthNumber) => {
    switch (monthNumber) {
        case 0:
            return 'January';
        case 1:
            return 'February';
        case 2:
            return 'March';
        case 3:
            return 'April';
        case 4:
            return 'May';
        case 5:
            return 'June';
        case 6:
            return 'July';
        case 7:
            return 'August';
        case 8:
            return 'September';
        case 9:
            return 'October';
        case 10:
            return 'November';
        case 11:
            return 'December';
        default:
            throw new Error('Invalid month number');
    }
};
